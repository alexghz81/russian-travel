Из такого многообразия инструментов важно выбрать наиболее подходящий. Анализируя макет, обращайте внимание:
Как меняется количество строк и колонок при сжатии элементов?
Меняют ли элементы свой порядок относительно друг друга?
Как меняются размеры и отступы? Попробуйте найти или предположить закономерности.
Какие элементы пропадают и появляются на разных разрешениях?
Как изменение элементов связано с изменением стилей их контейнеров? Например, свойство flex-direction часто меняют с row на column, а спозиционированные элементы возвращаются в поток.

Что нужно знать заранее
В каких браузерах проект должен работать? От этого зависят технологии, которыми вы сможете пользоваться.
На каких устройствах и экранах проект должен работать? Чаще всего это мобильные телефоны, планшеты и десктоп.
Как должна вести себя вёрстка в пограничных значениях: очень большой десктоп, очень маленький мобильный? Что происходит с вёрсткой в промежутках между «брейкпоинтами» — точками, где вёрстка «переламывается», и вступают в силу правила для другого разрешения экрана.
Нужна ли заказчику админка — панель управления контентом сайта, доступная для владельца и модераторов? Если нужна, скорее всего, понадобится отдельный бэкенд-разработчик, который будет её делать. Это значительно увеличивает стоимость проекта. Если заказчику админка не нужна, значит разработка будет дешевле и проще.
Если вы берёте проект на фриланс, обязательно договоритесь с заказчиком, сколько этапов правок вы будете делать. Без ограничений правки не закончатся никогда. Либо определите дополнительные условия работы над правками. Например, с почасовой или сдельной ставкой.

Чего часто может не хватать в макете или брифе
Объяснения, как и где работают анимации и ховеры — эффекты при наведении на ссылку или картинку. Это касается кнопок, выезжающих меню, попапов и ссылок.
Файлов со шрифтами. Также полезно проверить лицензию на их использование. Для этого просто вбейте в гугле слово typeface и название шрифта, и посмотрите по первым результатам в выдаче на раздел «License Information». Если лицензия не открытая (например, Commercial Licenses), то стоит задать этот вопрос дизайнеру.
Текстов и картинок. Убедитесь, что у вас есть тексты и картинки, которые участвуют в вёрстке.
Это минимальный набор того, что следует проверить после изучения макета и брифа. С опытом вы научитесь это делать самостоятельно и быстро.

Вот несколько вопросов, которые нужно обсудить с дизайнером, прежде чем приступать к вёрстке макета:
Насколько будет сжиматься вся страница? В смысле, до какого предела сжатия окна браузера элементы будут уменьшаться пропорционально в ширину. После достижения этого предела элементы могут либо перестать сжиматься (и появится скролл) либо радикально изменить своё положение/поведение. В этом случае используют min-width.
До какого предела могут расширяться страница или области контента? Есть много вариантов поведения. Обычно «резиновая» вёрстка предусматривает максимальную ширину, свыше которой элементы перестают растягиваться, а по бокам появляются поля (на веб-дизайнерском жаргоне — «уши»). Например, посмотрите, как ведёт себя страница сайта Нобелевской премии — в шапке и в основной зоне контента на широких мониторах. Если изображение Альфреда Нобеля тянется бесконечно, то зона контента на определённой ширине растягиваться перестаёт. Подобное поведение обеспечивается свойством max-width в сочетании с горизонтальным выравниванием через margin: auto;
Как должны менять свой размер текстовые блоки? Помните, что высота текстовых элементов может меняться при сжатии браузера или увеличении объёма текста. С одной стороны это значит, что самим текстовым элементам нужно задавать минимальную высоту вместо фиксированной, а с другой — родительские элементы тоже должны растягиваться при увеличении высоты контента. Вспоминайте это правило каждый раз, когда пишете свойство height, и задумывайтесь, не лучше ли использовать min-height.
Как элементы будут смотреться на очень больших экранах? Там размеры могут оказаться слишком велики. Например, вы задали основной картинке статьи min-height: 80vh;. На большом экране или проекторе изображение станет гигантским, а вам это не подходит. Не стесняйтесь в нужном месте использовать max-height.

/* Основной код для разрешения 1024px */
@media screen and (min-width: 2560px) {
    /* стили для больших мониторов с разрешением 4K */
}
@media screen and (min-width: 1440px) {
    /* стили для больших настольных компьютеров и ноутбуков */
}
@media screen and (max-width: 1024px) {
    /* стили для планшета в альбомной ориентации */
}
@media screen and (max-width: 768px) {
    /* стили для планшета */
}
@media screen and (max-width: 425px) {
    /* стили для широкого смартфона */
}
@media screen and (max-width: 375px) {
    /* стили для среднего смартфона */
}
@media screen and (max-width: 320px) {
    /* стили для малого смартфона */
}
